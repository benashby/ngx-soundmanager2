{"version":3,"sources":["/Users/lucasfarran/Projects/ngx-soundmanager2/demo/src/$_lazy_route_resource lazy","/Users/lucasfarran/Projects/ngx-soundmanager2/demo/src/app/app.component.css","/Users/lucasfarran/Projects/ngx-soundmanager2/demo/src/app/app.component.html","/Users/lucasfarran/Projects/ngx-soundmanager2/demo/src/app/app.component.ts","/Users/lucasfarran/Projects/ngx-soundmanager2/demo/src/app/app.module.ts","/Users/lucasfarran/Projects/ngx-soundmanager2/demo/src/environments/environment.ts","/Users/lucasfarran/Projects/ngx-soundmanager2/demo/src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,yF;;;;;;;ACVA;AACA;;;AAGA;AACA,uCAAwC,sBAAsB,GAAG,iBAAiB,wBAAwB,2BAA2B,2BAA2B,GAAG,iBAAiB,8BAA8B,sCAAsC,uBAAuB,GAAG,YAAY,wBAAwB,GAAG,qBAAqB,sBAAsB,iBAAiB,GAAG,gBAAgB,qBAAqB,GAAG,qBAAqB,qBAAqB,GAAG,eAAe,yBAAyB,GAAG;;AAExf;;;AAGA;AACA,2C;;;;;;;ACXA,i+BAAi+B,aAAa,+CAA+C,SAAS,sRAAsR,cAAc,2fAA2f,wBAAwB,MAAM,yBAAyB,IAAI,mCAAmC,KAAK,oCAAoC,gEAAgE,aAAa,sHAAsH,kBAAkB,snBAAsnB,UAAU,oPAAoP,QAAQ,0kBAA0kB,YAAY,mDAAmD,cAAc,kQ;;;;;;;;;;;;;;;;;;;;ACAvnH;AACN;AAOvD;IAkDE,sBAAoB,mBAAuC;QAAvC,wBAAmB,GAAnB,mBAAmB,CAAoB;QAjD3D,UAAK,GAAG,4BAA4B,CAAC;QAErC,UAAK,GAAG;YACN;gBACE,EAAE,EAAE,KAAK;gBACT,KAAK,EAAE,SAAS;gBAChB,MAAM,EAAE,kBAAkB;gBAC1B,GAAG,EAAE,uIAAuI;aAC7I;YACD;gBACE,EAAE,EAAE,KAAK;gBACT,KAAK,EAAE,UAAU;gBACjB,MAAM,EAAE,kBAAkB;gBAC1B,GAAG,EAAE,uIAAuI;aAC7I;YACD;gBACE,EAAE,EAAE,OAAO;gBACX,KAAK,EAAE,wBAAwB;gBAC/B,MAAM,EAAE,0BAA0B;gBAClC,GAAG,EAAE,iGAAiG;aACvG;YACD;gBACE,EAAE,EAAE,MAAM;gBACV,KAAK,EAAE,YAAY;gBACnB,MAAM,EAAE,0BAA0B;gBAClC,GAAG,EAAE,qFAAqF;aAC3F;YACD;gBACE,EAAE,EAAE,MAAM;gBACV,KAAK,EAAE,aAAa;gBACpB,MAAM,EAAE,cAAc;gBACtB,GAAG,EAAE,2FAA2F;aACjG;SACF,CAAC;IAgB4D,CAAC;IAE/D,+BAAQ,GAAR;QAAA,iBAwBC;QAvBC,gDAAgD;QAChD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,mBAAmB,CAAC,aAAa,EAAE,CAAC;QACrD,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC,mBAAmB,CAAC,2BAA2B;aACrF,SAAS,CAAC,UAAC,KAAU;YACpB,KAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;QAEL,8BAA8B;QAC9B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,EAAE,CAAC;QAClE,IAAI,CAAC,+BAA+B,GAAG,IAAI,CAAC,mBAAmB,CAAC,4BAA4B;aACzF,SAAS,CAAC,UAAC,KAAU;YACpB,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,mBAAmB,CAAC,gBAAgB,EAAE,CAAC;YAClE,KAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC;YACpD,KAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC;YACrD,KAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC;QACvD,CAAC,CAAC,CAAC;QAEL,+BAA+B;QAC/B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,SAAS,EAAE,CAAC;QACnD,IAAI,CAAC,8BAA8B,GAAG,IAAI,CAAC,mBAAmB,CAAC,6BAA6B;aACzF,SAAS,CAAC,UAAC,KAAU;YACpB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kCAAW,GAAX;QACE,IAAI,CAAC,4BAA4B,CAAC,WAAW,EAAE,CAAC;QAChD,IAAI,CAAC,+BAA+B,CAAC,WAAW,EAAE,CAAC;QACnD,IAAI,CAAC,8BAA8B,CAAC,WAAW,EAAE,CAAC;IACpD,CAAC;IAED,sBAAI,kCAAQ;aAAZ;YACE,MAAM,CAAC,IAAI,CAAC,oBAAoB,GAAG,CAAC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC;QACzF,CAAC;;;OAAA;IAED,sBAAI,kCAAQ;aAAZ;YACE,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;QAChD,CAAC;;;OAAA;IA1FU,YAAY;QALxB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAmDyC,6EAAkB;OAlDhD,YAAY,CA4FxB;IAAD,mBAAC;CAAA;AA5FwB;;;;;;;;;;;;;;;;;;;;;;;ACRiC;AACjB;AACsC;AAClB;AACF;AACA;AACZ;AAiB/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAdrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;aACb;YACD,OAAO,EAAE;gBACP,iFAAsB,CAAC,OAAO,EAAE;gBAChC,qGAAuB;gBACvB,mFAAgB;gBAChB,iFAAe;gBACf,gFAAa;aACd;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;ACvBtB;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;;;ACP6C;AAC4B;AACzD;AAE2B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,8EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/lucasfarran/Projects/ngx-soundmanager2/demo/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.sub-title {\\n  margin-left: 20px;\\n}\\n\\n.fill-space {\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1 1 auto;\\n          flex: 1 1 auto;\\n}\\n\\n.button-row {\\n  -ms-flex-pack: distribute;\\n      justify-content: space-around;\\n  margin-bottom: 5px;\\n}\\n\\n.songs {\\n  margin-left: -200px;\\n}\\n\\n.song-title-btn {\\n  text-align: right;\\n  width: 300px;\\n}\\n\\n.play-btns {\\n  margin-top: 20px;\\n}\\n\\n.playlist-title {\\n  margin-top: 20px;\\n}\\n\\n.playlist {\\n  padding-bottom: 30px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/lucasfarran/Projects/ngx-soundmanager2/demo/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<mat-toolbar>\\n  <a href=\\\"https://github.com/lfarran/ngx-soundmanager2\\\">ngx-soundmanager2</a>\\n  <small class=\\\"sub-title\\\">An Audio Player for Angular</small>\\n\\n  <span class=\\\"fill-space\\\"></span>\\n\\n  <!-- https://buttons.github.io/ -->\\n  <span class=\\\"github\\\">\\n    <!-- Place this tag where you want the button to render. -->\\n    <a class=\\\"github-button\\\"\\n       href=\\\"https://github.com/lfarran/ngx-soundmanager2\\\"\\n       data-icon=\\\"octicon-star\\\"\\n       data-show-count=\\\"true\\\"\\n       aria-label=\\\"Star lfarran/ngx-soundmanager2 on GitHub\\\">\\n      Star\\n    </a>\\n\\n    <!-- Place this tag where you want the button to render. -->\\n    <a class=\\\"github-button\\\"\\n       href=\\\"https://github.com/lfarran/ngx-soundmanager2/fork\\\"\\n       data-icon=\\\"octicon-repo-forked\\\"\\n       data-show-count=\\\"true\\\"\\n       aria-label=\\\"Fork lfarran/ngx-soundmanager2 on GitHub\\\">\\n      Fork\\n    </a>\\n  </span>\\n</mat-toolbar>\\n\\n<div style=\\\"text-align:center; margin: 8px;\\\">\\n  <h1 class=\\\"mat-h1\\\">\\n    Welcome to {{ title }}!\\n  </h1>\\n\\n  <div>\\n    <h5 class=\\\"mat-title\\\">Songs</h5>\\n    <div *ngFor=\\\"let song of songs\\\" class=\\\"songs\\\">\\n      <div class=\\\"button-row\\\">\\n        <button mat-button color=\\\"primary\\\" class=\\\"song-title-btn\\\" [musicPlayer]=\\\"'play'\\\" [song]=\\\"song\\\">\\n          {{ song.title }}\\n        </button>\\n        <button mat-mini-fab color=\\\"accent\\\" musicPlayer [song]=\\\"song\\\">+</button>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"button-row play-btns\\\">\\n      <button mat-raised-button color=\\\"primary\\\" playAll [songs]=\\\"songs\\\">Play all</button>\\n      <button mat-raised-button color=\\\"accent\\\" playAll [songs]=\\\"songs\\\" [play]=\\\"false\\\">Add all</button>\\n    </div>\\n  </div>\\n\\n  <hr />\\n\\n  <div>\\n    <p *ngIf=\\\"currentPlaying\\\" class=\\\"mat-body\\\">\\n      Currently Playing: {{ currentPlaying.title }} by {{ currentPlaying.artist }} ({{ currentTrackPostion | humanTime }} / {{ currentTrackDuration | humanTime }})\\n    </p>\\n\\n    <div class=\\\"progress\\\" style=\\\"height: 20px; width: 100%;\\\">\\n      <div class=\\\"progress-bar progress-bar-success\\\"\\n           role=\\\"progressbar\\\"\\n           [ngStyle]=\\\"{width : progress }\\\">\\n        <span class=\\\"sr-only\\\"></span>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"button-row\\\">\\n      <button mat-raised-button color=\\\"primary\\\" playMusic>\\n        <i class=\\\"fa fa-play\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button mat-raised-button color=\\\"accent\\\" pauseMusic>\\n        <i class=\\\"fa fa-pause\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button mat-raised-button color=\\\"warn\\\" stopMusic>\\n        <i class=\\\"fa fa-stop\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button mat-raised-button repeatMusic>Repeat</button>\\n    </div>\\n\\n    <h5 class=\\\"mat-body\\\">Volume: {{ volume }}</h5>\\n\\n    <div class=\\\"button-row\\\">\\n      <button mat-raised-button color=\\\"primary\\\" increaseVolume>+</button>\\n      <button mat-raised-button color=\\\"accent\\\" decreaseVolume>-</button>\\n      <button mat-raised-button muteMusic>Mute ({{ mute }})</button>\\n    </div>\\n\\n    <div class=\\\"button-row\\\">\\n      <button mat-icon-button color=\\\"primary\\\" previousTrack>\\n        <i class=\\\"fa fa-step-backward\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button mat-icon-button color=\\\"primary\\\" nextTrack>\\n        <i class=\\\"fa fa-step-forward\\\" aria-hidden=\\\"true\\\"></i>\\n      </button>\\n      <button mat-raised-button color=\\\"primary\\\" clearPlaylist>Clear Playlist</button>\\n    </div>\\n\\n    <h5 class=\\\"mat-title playlist-title\\\">Playlist:</h5>\\n\\n    <div class=\\\"playlist\\\">\\n      <div *ngFor=\\\"let song of playlist; index as i;\\\">\\n        <a playFromPlaylist [song]=\\\"song\\\">{{ song.title }}</a>\\n        <a removeFromPlaylist [song]=\\\"song\\\" [index]=\\\"i\\\">\\n          <small>(remove)</small>\\n        </a>\\n        <span *ngIf=\\\"currentPlaying && currentPlaying.id == song.id\\\"> - (current)</span>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/lucasfarran/Projects/ngx-soundmanager2/demo/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MusicPlayerService } from 'ngx-soundmanager2';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  title = 'the ngx-soundmanager2 demo';\n\n  songs = [\n    {\n      id: 'one',\n      title: 'Kick It',\n      artist: 'Raised On Zenith',\n      url: 'https://popplers5.bandcamp.com/download/track?enc=mp3-128&fsig=10442536bc89f9881e8da2eb81ecd5fb&id=120877506&stream=1&ts=1502502685.0'\n    },\n    {\n      id: 'two',\n      title: 'How Long',\n      artist: 'Raised On Zenith',\n      url: 'https://popplers5.bandcamp.com/download/track?enc=mp3-128&fsig=468f1ed20aae2aba824fb4e6923ff850&id=470307233&stream=1&ts=1502595994.0'\n    },\n    {\n      id: 'three',\n      title: 'Details and Structures',\n      artist: 'Air This Side of Caution',\n      url: 'http://lukefarran.com/music/AirThisSideOfCaution/NatureWillTurnOnUs/02_Details%26Structures.mp3'\n    },\n    {\n      id: 'four',\n      title: 'Here We Go',\n      artist: 'Air This Side of Caution',\n      url: 'http://lukefarran.com/music/AirThisSideOfCaution/NatureWillTurnOnUs/03_HereWeGo.mp3'\n    },\n    {\n      id: 'five',\n      title: 'Without You',\n      artist: 'The Assembly',\n      url: 'http://lukefarran.com/music/TheAssembly/TheFutureHasBeenSold_LukeMaster/07_WithoutYou.mp3'\n    }\n  ];\n\n  mute: boolean;\n\n  currentPlaying: any;\n\n  currentTrackPostion: number;\n  currentTrackDuration: number;\n  currentTrackProgress: number;\n  volume: number;\n\n  // subscriptions\n  private _musicPlayerMuteSubscription: any;\n  private _musicPlayerTrackIdSubscription: any;\n  private _musicPlayerVolumeSubscription: any;\n\n  constructor(private _musicPlayerService: MusicPlayerService) {}\n\n  ngOnInit() {\n    // Subscribe for mute changes to update bindings\n    this.mute = this._musicPlayerService.getMuteStatus();\n    this._musicPlayerMuteSubscription = this._musicPlayerService.musicPlayerMuteEventEmitter\n      .subscribe((event: any) => {\n        this.mute = event.data;\n      });\n\n    // Subscribe for track changes\n    this.currentPlaying = this._musicPlayerService.currentTrackData();\n    this._musicPlayerTrackIdSubscription = this._musicPlayerService.musicPlayerTrackEventEmitter\n      .subscribe((event: any) => {\n        this.currentPlaying = this._musicPlayerService.currentTrackData();\n        this.currentTrackPostion = event.data.trackPosition;\n        this.currentTrackDuration = event.data.trackDuration;\n        this.currentTrackProgress = event.data.trackProgress;\n      });\n\n    // subscribe for volume changes\n    this.volume = this._musicPlayerService.getVolume();\n    this._musicPlayerVolumeSubscription = this._musicPlayerService.musicPlayerVolumeEventEmitter\n      .subscribe((event: any) => {\n        this.volume = event.data;\n      });\n  }\n\n  ngOnDestroy() {\n    this._musicPlayerMuteSubscription.unsubscribe();\n    this._musicPlayerTrackIdSubscription.unsubscribe();\n    this._musicPlayerVolumeSubscription.unsubscribe();\n  }\n\n  get progress(): string {\n    return this.currentTrackProgress ? (this.currentTrackProgress.toString() + '%') : '0%';\n  }\n\n  get playlist(): any {\n    return this._musicPlayerService.getPlaylist();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/lucasfarran/Projects/ngx-soundmanager2/demo/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { NgxSoundmanager2Module } from 'ngx-soundmanager2';\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    NgxSoundmanager2Module.forRoot(),\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/lucasfarran/Projects/ngx-soundmanager2/demo/src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/lucasfarran/Projects/ngx-soundmanager2/demo/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport 'hammerjs';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/lucasfarran/Projects/ngx-soundmanager2/demo/src/main.ts"],"sourceRoot":"webpack:///"}